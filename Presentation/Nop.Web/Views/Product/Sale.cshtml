@model ListProductModel
@{
    Layout = "~/Views/Shared/_Root.cshtml";
    Html.AddTitleParts(T("tg.web.Sale.title").Text);
    Html.AddMetaDescriptionParts(T("tg.web.Sale.description").Text);
    Html.AddMetaKeywordParts(T("tg.web.Sale.Keyword").Text);

    Html.AppendScriptParts("~/Scripts/tm/jquery.dd.min.js");
    Html.AppendCssFileParts("~/Content/tm/dd.css");
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
<div class="page category-page"> 
    <div class="page-body">
        <div class="side-2">
            @Html.Widget("left_side_column_before")
            @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = 0, currentProductId = 0 })
            @Html.Widget("left_side_column_after_category_navigation")
            @Html.Action("ManufacturerNavigation", "Catalog", new { currentManufacturerId = 0 })
            @Html.Widget("categorydetails_before_filters", Model.Id)
            <div class="product-filters-wrapper">
                @*filtering*@
                @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
                {
                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
                }
                @*filtering*@
                @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
                {
                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
                }
            </div>
            @Html.Action("VendorNavigation", "Catalog")
            @Html.Widget("left_side_column_after")
        </div>
        <div class="center-2">
            <div class="page-title">
                <h1>@T("tg.web.Sale.title")</h1>
            </div>
            @Html.Widget("categorydetails_after_featured_products", Model.Id)
            @if (Model.Products.Count > 0)
            {
                <div class="product-selectors">
                    @*sorting*@
                    @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                    {
                        <div class="product-sorting">
                            <span class="lblsorting">@T("Catalog.OrderBy")</span>
                            @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
                        </div>
                        <script type="text/javascript">
                            $(document).ready(function (e) {
                                try {
                                    $("#products-orderby").msDropDown({
                                        roundedCorner: false
                                    });
                                } catch (e) {
                                    alert(e.message);
                                }
                            });
                        </script>
                    }
                    @*view mode*@
                    @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                    {
                        <div class="product-viewmode">
                            <span class="lblviewmode">@T("Catalog.ViewMode")</span>
                            @foreach (var item in Model.PagingFilteringContext.AvailableViewModes)
                            {
                                <a href="@item.Value" class="viewmode viewmode-@item.Text">@item.Text</a>
                            }
                            @*@Html.DropDownList("products-viewmode", Model.PagingFilteringContext.AvailableViewModes, new { onchange = "setLocation(this.value);" })*@
                        </div>
                    }
                </div>
            }
            @Html.Widget("categorydetails_before_product_list", Model.Id)
            @*product list*@
            @if (Model.Products.Count > 0)
            {
                if (Model.PagingFilteringContext.ViewMode == "list")
                {
                    @*list mode*@
                    <div class="product-list">
                        @foreach (var product in Model.Products)
                        {
                        <div class="item-box">
                            @Html.Partial("_ProductBox", product)
                        </div>
                        }
                    </div>
                }
                else
                {
                    @*grid mode*@
                    <div class="product-grid">
                        @foreach (var product in Model.Products)
                        {
                            var i = Model.Products.IndexOf(product) + 1;
                        <div class="item-box @if( ( i + 4 ) % 4 == 0){<text>last</text>}">
                            @Html.Partial("_ProductBox", product)
                        </div>
                        }
                    </div>
                }
            }
            <div class="pager">
                @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
            </div>
        </div>
    </div>
    @Html.Action("RecentlyViewedProductsBlock", "Product", new { productThumbPictureSize = 100 })
</div>
